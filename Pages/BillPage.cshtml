@page
@model damiWeb.Pages.BillPageModel
<link rel="stylesheet" href="~/css/BillPage.css" />

<div class="bill-container">
    <div class="bill-title">HÓA ĐƠN BÁN HÀNG</div>

    <form method="post" asp-page-handler="Save">
        <!-- Dòng 1: Số HĐ và Ngày -->
        <div class="bill-info" style="display: flex; justify-content: space-between; align-items: center;">
            <div>
                <label>Số hóa đơn:</label>
                <input asp-for="OrderNo" readonly style="width: 80px;" />
            </div>
            <div>
                <label>Ngày:</label>
                <input asp-for="OrderDate" type="date" />
            </div>
        </div>

        <!-- Dòng 2: Mã KH và Tên KH -->
        <div class="customer-info" style="display: flex; align-items: center; margin-top: 10px;">
            <label style="margin-right: 8px;">Khách hàng:</label>
            <input asp-for="CustomerID" id="txtMaKH" style="width: 80px; margin-right: 10px;" />
            <input asp-for="CustomerName" readonly style="flex-grow: 1;" />
        </div>

        <!-- Dòng 3: Địa chỉ -->
        <div class="customer-info" style="margin-top: 10px;">
            <label>Địa chỉ:</label>
            <input asp-for="Address" readonly style="width: 70%;" />
        </div>

        <div class="table-wrapper">
            <table class="items-table">
                <thead>
                    <tr>
                        <th>Mã hàng</th>
                        <th>Tên hàng</th>
                        <th>ĐVT</th>
                        <th>Số lượng</th>
                        <th>Đơn giá</th>
                        <th>Thành tiền</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="goods-body">
                    @for (int i = 0; i < Model.Items.Count; i++)
                    {
                        <tr>
                            <td>
                                <input name="Items[@i].ItemID" class="item-id" value="@Model.Items[i].ItemID"
                                       onchange="onItemChange(this)" />
                            </td>
                            <td>
                                <input name="Items[@i].ItemName" class="item-name" value="@Model.Items[i].ItemName"
                                       onchange="onItemChange(this)" />
                            </td>
                            <td><input name="Items[@i].Unit" class="item-unit" value="@Model.Items[i].Unit" readonly /></td>
                            <td><input name="Items[@i].Quantity" type="number" class="item-qty text-right" value="@Model.Items[i].Quantity" /></td>
                            <td><input name="Items[@i].Price" type="number" class="item-price text-right" value="@Model.Items[i].Price" /></td>
                            <td><input name="Items[@i].Amount" class="item-amount text-right" value="@Model.Items[i].Amount" readonly /></td>
                            <td><button type="button" onclick="removeRow(this)">X</button></td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="total-row">
                        <td colspan="3" class="text-right">Tổng cộng</td>
                        <td id="totalQty" class="text-right">0</td>
                        <td></td>
                        <td id="totalAmount" class="text-right">0</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div style="margin-top: 10px; text-align: left;">
            <button type="button" onclick="addRow()">+ Thêm dòng</button>
        </div>

        <div class="btn-group">
            <button type="submit">Ghi</button>
            <button type="reset">Bỏ qua</button>
            <button type="button" onclick="location.href='/'">Trở về</button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        const txtMaKH = document.getElementById("txtMaKH");

        txtMaKH.addEventListener("change", () => {
            const id = txtMaKH.value.trim();

            if (!id) {
                document.querySelector('[name="CustomerName"]').value = '';
                document.querySelector('[name="Address"]').value = '';
                return;
            }

            fetch(`/BillPage?handler=Customer&id=${encodeURIComponent(id)}`)
                .then(r => r.json())
                .then(d => {
                    if (d) {
                        document.querySelector('[name="CustomerName"]').value = d.customerName;
                        document.querySelector('[name="Address"]').value = d.address;
                    } else {
                        alert("Không tìm thấy khách hàng!");
                        document.querySelector('[name="CustomerName"]').value = '';
                        document.querySelector('[name="Address"]').value = '';
                    }
                });
        });

        function updateTotals() {
            let totalQty = 0, totalAmount = 0;

            const formatter = new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });

            document.querySelectorAll('#goods-body tr').forEach(row => {
                const qty = parseFloat(row.querySelector('.item-qty').value) || 0;
                const price = parseFloat(row.querySelector('.item-price').value) || 0;
                const amount = qty * price;

                row.querySelector('.item-amount').value = amount.toLocaleString();
                totalQty += qty;
                totalAmount += amount;
            });

            document.getElementById('totalQty').textContent = totalQty;
            document.getElementById('totalAmount').textContent = totalAmount.toLocaleString();
        }

        document.addEventListener('input', function (e) {
            if (e.target.classList.contains('item-qty') || e.target.classList.contains('item-price')) {
                updateTotals();
            }
        });

        function addRow() {
            const table = document.getElementById("goods-body");
            const index = table.rows.length;
            const row = table.insertRow();

            row.innerHTML = `
                <td><input name="Items[${index}].ItemID" class="item-id" onchange="onItemChange(this)" /></td>
                <td><input name="Items[${index}].ItemName" class="item-name" onchange="onItemChange(this)" readonly /></td>
                <td><input name="Items[${index}].Unit" class="item-unit" readonly /></td>
                <td><input name="Items[${index}].Quantity" type="number" class="item-qty text-right" value="0" /></td>
                <td><input name="Items[${index}].Price" type="number" class="item-price text-right" value="0" /></td>
                <td><input name="Items[${index}].Amount" class="item-amount text-right" readonly /></td>
                <td><button type="button" onclick="removeRow(this)">X</button></td>
            `;
        }

        function removeRow(btn) {
            btn.closest('tr').remove();
            updateTotals();
        }

        // Cập nhật tổng khi trang load
        document.addEventListener('DOMContentLoaded', updateTotals);

                    let itemList = [];

               document.addEventListener("DOMContentLoaded", function () {
            fetch("/BillPage?handler=AllItems", {
                headers: {
                    "Cache-Control": "no-cache"
                }
            })
                .then(res => {
                    if (!res.ok) throw new Error("Fetch thất bại");
                    return res.json();
                })
                .then(data => {
                    if (!data || !Array.isArray(data)) throw new Error("Không phải mảng JSON");
                    itemList = data;
                    console.log("Danh sách hàng:", itemList); // Kiểm tra xem có dữ liệu không
                })
                .catch(err => console.error("Lỗi fetch AllItems:", err));
        });

        function onItemChange(input) {
            const row = input.closest('tr');
            const val = input.value.trim();
            console.log("Người dùng nhập:", val);

            const item = itemList.find(i => i.itemID === val || i.itemName === val);

            if (item) {
                console.log("Tìm thấy:", item);
                row.querySelector('.item-id').value = item.itemID;
                row.querySelector('.item-name').value = item.itemName;
                row.querySelector('.item-unit').value = item.unit;
                row.querySelector('.item-price').value = item.price;
                updateTotals();
            } else {
                console.warn("Không tìm thấy mặt hàng với:", val);
            }
        }
    </script>
}
